{"ast":null,"code":"import _regeneratorRuntime from \"/Users/a18407633/Documents/Next/client/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/a18407633/Documents/Next/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/a18407633/Documents/Next/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nexport var useForm = function useForm(defaultValues) {\n  return function (handler) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var form, elements, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                event.persist();\n                form = event.target;\n                elements = Array.from(form.elements);\n                data = elements.filter(function (element) {\n                  return element.hasAttribute('name');\n                }).reduce(function (object, element) {\n                  return _objectSpread(_objectSpread({}, object), {}, _defineProperty({}, \"\".concat(element.getAttribute('name')), element.value));\n                }, defaultValues);\n                _context.next = 7;\n                return handler(data);\n\n              case 7:\n                form.reset();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n}; // https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nexport var useInterval = function useInterval(callback, delay) {\n  _s();\n\n  var savedCallback = useRef();\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    var handler = function handler() {\n      var _savedCallback$curren;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_savedCallback$curren = savedCallback.current) === null || _savedCallback$curren === void 0 ? void 0 : _savedCallback$curren.call.apply(_savedCallback$curren, [savedCallback].concat(args));\n    };\n\n    if (delay !== null) {\n      var id = setInterval(handler, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}; // Use throughout your app instead of plain `useDispatch` and `useSelector`\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport var useAppDispatch = function useAppDispatch() {\n  _s2();\n\n  return useDispatch();\n};\n\n_s2(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport var useAppSelector = useSelector;","map":{"version":3,"sources":["/Users/a18407633/Documents/Next/client/src/app/hooks.ts"],"names":["useEffect","useRef","useDispatch","useSelector","useForm","defaultValues","handler","event","preventDefault","persist","form","target","elements","Array","from","data","filter","element","hasAttribute","reduce","object","getAttribute","value","reset","useInterval","callback","delay","savedCallback","current","args","id","setInterval","clearInterval","useAppDispatch","useAppSelector"],"mappings":";;;;;;;;;;;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAWC,aAAX;AAAA,SAAuC,UAC5DC,OAD4D;AAAA;AAAA,0EAEzD,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACHA,gBAAAA,KAAK,CAACC,cAAN;AACAD,gBAAAA,KAAK,CAACE,OAAN;AAEMC,gBAAAA,IAJH,GAIUH,KAAK,CAACI,MAJhB;AAKGC,gBAAAA,QALH,GAKcC,KAAK,CAACC,IAAN,CAAWJ,IAAI,CAACE,QAAhB,CALd;AAMGG,gBAAAA,IANH,GAMUH,QAAQ,CAClBI,MADU,CACH,UAACC,OAAD;AAAA,yBAAaA,OAAO,CAACC,YAAR,CAAqB,MAArB,CAAb;AAAA,iBADG,EAEVC,MAFU,CAGT,UAACC,MAAD,EAASH,OAAT;AAAA,yDACKG,MADL,qCAEMH,OAAO,CAACI,YAAR,CAAqB,MAArB,CAFN,GAEuCJ,OAAO,CAACK,KAF/C;AAAA,iBAHS,EAOTjB,aAPS,CANV;AAAA;AAAA,uBAeGC,OAAO,CAACS,IAAD,CAfV;;AAAA;AAgBHL,gBAAAA,IAAI,CAACa,KAAL;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFyD;;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;AAAA,CAAhB,C,CAqBP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAqBC,KAArB,EAAuC;AAAA;;AAChE,MAAMC,aAAa,GAAG1B,MAAM,EAA5B;AACAD,EAAAA,SAAS,CAAC,YAAM;AACd2B,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGAzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,wCAAIuB,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,sCAAkBF,aAAa,CAACC,OAAhC,0DAAkB,yDAAAD,aAAa,QAAb,CAA2BE,IAA3B,EAAlB;AAAA,KAAhB;;AAEA,QAAIH,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAMI,EAAE,GAAGC,WAAW,CAACzB,OAAD,EAAUoB,KAAV,CAAtB;AACA,aAAO;AAAA,eAAMM,aAAa,CAACF,EAAD,CAAnB;AAAA,OAAP;AACD;AACF,GAPQ,EAON,CAACJ,KAAD,CAPM,CAAT;AAQD,CAbM,C,CAeP;;GAfaF,W;;AAgBb,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA,SAAM/B,WAAW,EAAjB;AAAA,CAAvB;;IAAM+B,c;UAAuB/B,W;;;AAEpC,OAAO,IAAMgC,cAA8C,GAAG/B,WAAvD","sourcesContent":["import type { ChangeEvent } from 'react'\nimport { useEffect, useRef } from 'react'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nimport type { AppDispatch, AppState } from './store'\n\nexport const useForm = <TContent>(defaultValues: TContent) => (\n  handler: (content: TContent) => void\n) => async (event: ChangeEvent<HTMLFormElement>) => {\n  event.preventDefault()\n  event.persist()\n\n  const form = event.target as HTMLFormElement\n  const elements = Array.from(form.elements) as HTMLInputElement[]\n  const data = elements\n    .filter((element) => element.hasAttribute('name'))\n    .reduce(\n      (object, element) => ({\n        ...object,\n        [`${element.getAttribute('name')}`]: element.value,\n      }),\n      defaultValues\n    )\n  await handler(data)\n  form.reset()\n}\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport const useInterval = (callback: Function, delay: number) => {\n  const savedCallback = useRef<Function>()\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n  useEffect(() => {\n    const handler = (...args: any) => savedCallback.current?.(...args)\n\n    if (delay !== null) {\n      const id = setInterval(handler, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector\n"]},"metadata":{},"sourceType":"module"}