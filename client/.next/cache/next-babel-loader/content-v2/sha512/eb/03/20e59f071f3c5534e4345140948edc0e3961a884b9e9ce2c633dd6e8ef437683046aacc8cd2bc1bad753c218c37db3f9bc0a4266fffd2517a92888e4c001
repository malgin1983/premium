{"ast":null,"code":"import _regeneratorRuntime from \"/Users/a18407633/Documents/Next/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/a18407633/Documents/Next/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function fetchCount() {\n  return _fetchCount.apply(this, arguments);\n}\n\nfunction _fetchCount() {\n  _fetchCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var amount,\n        response,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            amount = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n            _context.next = 3;\n            return fetch('/api/counter', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                amount: amount\n              })\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchCount.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/a18407633/Documents/Next/client/src/features/counter/counterAPI.ts"],"names":["fetchCount","amount","fetch","method","headers","body","JSON","stringify","response","json","result"],"mappings":";;AAAA,gBAAsBA,UAAtB;AAAA;AAAA;;;yEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0BC,YAAAA,MAA1B,2DAAmC,CAAnC;AAAA;AAAA,mBACkBC,KAAK,CAAC,cAAD,EAAiB;AAC3CC,cAAAA,MAAM,EAAE,MADmC;AAE3CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFkC;AAK3CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,gBAAAA,MAAM,EAANA;AAAF,eAAf;AALqC,aAAjB,CADvB;;AAAA;AACCO,YAAAA,QADD;AAAA;AAAA,mBAQgBA,QAAQ,CAACC,IAAT,EARhB;;AAAA;AAQCC,YAAAA,MARD;AAAA,6CAUEA,MAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function fetchCount(amount = 1): Promise<{ data: number }> {\n  const response = await fetch('/api/counter', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ amount }),\n  })\n  const result = await response.json()\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}